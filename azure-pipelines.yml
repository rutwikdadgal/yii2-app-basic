# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- main

pool:
  name: default

steps:
- script: |
    # Update package lists and install prerequisites
    sudo apt-get update
    sudo apt-get install -y software-properties-common

    # Add Ondrej PHP PPA
    sudo add-apt-repository -y ppa:ondrej/php
    sudo apt-get update
    sudo apt-get install -y apache2

    # Install PHP 7.4 and common packages
    sudo apt-get install -y php7.4 php7.4-cli php7.4-fpm php7.4-mysql php7.4-mbstring php7.4-xml php7.4-json php7.4-curl php7.4-zip unzip
    php -v
  displayName: 'Install PHP 7.4 from PPA'

- script: |
    sudo update-alternatives --install /usr/bin/php php /usr/bin/php7.4 1
    sudo update-alternatives --install /usr/bin/phar phar /usr/bin/phar7.4 1
    sudo update-alternatives --install /usr/bin/phpdbg phpdbg /usr/bin/phpdbg7.4 1
    sudo update-alternatives --install /usr/bin/php-cgi php-cgi /usr/bin/php-cgi7.4 1
    sudo update-alternatives --install /usr/bin/phar.phar phar.phar /usr/bin/phar.phar7.4 1
    sudo update-alternatives --set php /usr/bin/php7.4
    sudo update-alternatives --set phar /usr/bin/phar7.4
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg7.4
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi7.4
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar7.4
    php -v
  displayName: 'Configure PHP version 7.4'

- script: |
    # Install Composer
    curl -sS https://getcomposer.org/installer | php
    sudo mv composer.phar /usr/local/bin/composer
    composer --version
  displayName: 'Install Composer'

- script: composer install --no-interaction --prefer-dist
  displayName: 'composer install'

- script: |
    # Install zip utility
    sudo apt-get install -y zip
  displayName: 'Install zip utility'
  
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive source code'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish build artifacts'
